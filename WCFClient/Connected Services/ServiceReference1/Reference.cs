//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/BookLibrary")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        private string v1;
        private string v2;
        private int v3;
        private int v4;

        public Book(string v1, string v2, int v3, int v4)
        {
            this.v1 = v1;
            this.v2 = v2;
            this.v3 = v3;
            this.v4 = v4;
        }

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IWorkWithBookService")]
    public interface IWorkWithBookService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkWithBookService/ShowLibrary", ReplyAction="http://tempuri.org/IWorkWithBookService/ShowLibraryResponse")]
        void ShowLibrary(WCFClient.ServiceReference1.Book[] books);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkWithBookService/ShowLibrary", ReplyAction="http://tempuri.org/IWorkWithBookService/ShowLibraryResponse")]
        System.Threading.Tasks.Task ShowLibraryAsync(WCFClient.ServiceReference1.Book[] books);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkWithBookService/AddNewBook", ReplyAction="http://tempuri.org/IWorkWithBookService/AddNewBookResponse")]
        void AddNewBook(WCFClient.ServiceReference1.Book[] books, WCFClient.ServiceReference1.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkWithBookService/AddNewBook", ReplyAction="http://tempuri.org/IWorkWithBookService/AddNewBookResponse")]
        System.Threading.Tasks.Task AddNewBookAsync(WCFClient.ServiceReference1.Book[] books, WCFClient.ServiceReference1.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkWithBookService/UpdateBookPrice", ReplyAction="http://tempuri.org/IWorkWithBookService/UpdateBookPriceResponse")]
        void UpdateBookPrice(WCFClient.ServiceReference1.Book[] books, WCFClient.ServiceReference1.Book book, decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkWithBookService/UpdateBookPrice", ReplyAction="http://tempuri.org/IWorkWithBookService/UpdateBookPriceResponse")]
        System.Threading.Tasks.Task UpdateBookPriceAsync(WCFClient.ServiceReference1.Book[] books, WCFClient.ServiceReference1.Book book, decimal price);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWorkWithBookServiceChannel : WCFClient.ServiceReference1.IWorkWithBookService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkWithBookServiceClient : System.ServiceModel.ClientBase<WCFClient.ServiceReference1.IWorkWithBookService>, WCFClient.ServiceReference1.IWorkWithBookService {
        
        public WorkWithBookServiceClient() {
        }
        
        public WorkWithBookServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WorkWithBookServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkWithBookServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkWithBookServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ShowLibrary(WCFClient.ServiceReference1.Book[] books) {
            base.Channel.ShowLibrary(books);
        }
        
        public System.Threading.Tasks.Task ShowLibraryAsync(WCFClient.ServiceReference1.Book[] books) {
            return base.Channel.ShowLibraryAsync(books);
        }
        
        public void AddNewBook(WCFClient.ServiceReference1.Book[] books, WCFClient.ServiceReference1.Book book) {
            base.Channel.AddNewBook(books, book);
        }
        
        public System.Threading.Tasks.Task AddNewBookAsync(WCFClient.ServiceReference1.Book[] books, WCFClient.ServiceReference1.Book book) {
            return base.Channel.AddNewBookAsync(books, book);
        }
        
        public void UpdateBookPrice(WCFClient.ServiceReference1.Book[] books, WCFClient.ServiceReference1.Book book, decimal price) {
            base.Channel.UpdateBookPrice(books, book, price);
        }
        
        public System.Threading.Tasks.Task UpdateBookPriceAsync(WCFClient.ServiceReference1.Book[] books, WCFClient.ServiceReference1.Book book, decimal price) {
            return base.Channel.UpdateBookPriceAsync(books, book, price);
        }
    }
}
